[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ev-charge-demand-tool"
dynamic = ["version"]
description = "ML tool for EV vehicle charge demand analysis and prediction"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "G0OZE", email = "killerfantom23@gmail.com"},
    {name = "GANTA PRANEETH REDDY"}
]
maintainers = [
    {name = "G0OZE", email = "killerfantom23@gmail.com"},
    {name = "GANTA PRANEETH REDDY"}
]
keywords = ["ev", "electric-vehicle", "charge-demand", "machine-learning", "analysis", "prediction"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Topic :: Education",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "urllib3>=1.26.0",
    "click>=8.0.0",
    "colorama>=0.4.4",
    "psutil>=5.8.0",
    "python-dotenv>=0.19.0",
    "cryptography>=3.4.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "nbformat>=5.1.0",
    "jupyter-client>=7.0.0",
    "structlog>=21.1.0",
    "jsonschema>=3.2.0",
    "python-dateutil>=2.8.0",
    "tqdm>=4.62.0",
    "GitPython>=3.1.0",
    "aiohttp>=3.7.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.12.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "tox>=4.0.0",
    "coverage>=7.0.0",
    "types-requests>=2.28.0",
    "types-python-dateutil>=2.8.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autobuild>=2021.3.14",
]

[project.urls]
Homepage = "https://github.com/G0OZE/EV-Vehicle-charge-demand"
Documentation = "https://github.com/G0OZE/EV-Vehicle-charge-demand/docs"
Repository = "https://github.com/G0OZE/EV-Vehicle-charge-demand"
"Bug Tracker" = "https://github.com/G0OZE/EV-Vehicle-charge-demand/issues"
Changelog = "https://github.com/G0OZE/EV-Vehicle-charge-demand/blob/main/CHANGELOG.md"

[project.scripts]
ev-analysis = "src.cli.workflow_cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

[tool.setuptools_scm]
write_to = "src/_version.py"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "jupyter_client.*",
    "nbformat.*",
    "git.*",
    "aiohttp.*",
    "asyncio_throttle.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"